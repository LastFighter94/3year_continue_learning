https://docs.docker.com/engine/install/ubuntu

После того как зашел на сервер VDS хреначишь команды две внизу из сайта выше

sudo apt-get update
sudo apt-get install ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update

sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin



Все отработало на selectel VDS - по IP http://178.72.131.148/

На beget все тоже отработало - http://5.35.92.117/ IP - но там пришлось сделать команду sudo systemctl start docker - и поменять ip в вызове на АПИ естественно - а так схема с запуском бэк + фронт + nginx прокатила в общем и целом - разберем подробнее и продвигаться дальше надо по учебе


Ролик чела https://www.youtube.com/watch?v=uLp-zgset00 - пришлось перелопатить, потому что в итоге по его схеме ничего не отрабатывало от слова совсем, кучу раз править пришлось

Схема работы - 

После того как накатили зависимости выше на сервер

Клонируем репу с кодом данного проекта, новые изменения просто пулим

Переходим в проект где docker-compose в корне и хреначим docker compose up --build

вуаля, есть фронт, есть бэк, все через докер на vds сервере с nginx и работает

Теперь надо разобраться как на локалке все это запустить грамотно, желательно тоже без venv и node_modules по хорошему 



На локалке все запускается спокойно

Далее момент с тем что на локалке http://localhost:8000 API
А на проду http://5.35.92.117:8000

Решается это так - есть файл .env

На локалке один маршрут, на вроде другой - и gitignore делаем на .env файл и все в шоколаде

Теперь вопрос - как сделать так чтобы не надо было все время пересобирать контейнер при изменениях, чтобы увидеть их - при этом опять таки без venv и node_modules - хотя это как будто бы нереально - вот и узнаем



docker compose -f docker-compose.dev.yml up --build

Здесь -f (или --file) говорит Docker Compose, какой файл использовать.